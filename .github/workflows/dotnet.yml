# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore ./LongestIncreasingSequence
    - name: Build
      run: dotnet build ./LongestIncreasingSequence --no-restore -c Release
    - name: Test
      run: dotnet test ./LongestIncreasingSequence --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage/**/coverage.cobertura.xml
        badge: true
        fail_below_min: false
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'
    - name: Publish to NuGet
      run: |
         dotnet pack ./LongestIncreasingSequence/LongestIncreasingSequence.Lib/LongestIncreasingSequence.Lib.csproj -c Release -o out
    - name: Install NuGet client
      uses: NuGet/setup-nuget@v2.0.0      
    - name: Push generated package to Nuget.Org
      run: nuget push *.nupkg -ApiKey ${{secrets.NUGET_PUSH_KEY}} -Source "https://github.com/ajayess/59a94f97-4565-43c2-9f60-99d424f1cba8" -SkipDuplicate
